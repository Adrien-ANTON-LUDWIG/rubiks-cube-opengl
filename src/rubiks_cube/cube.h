#pragma once

#include <GL/freeglut.h>

#include <vector>

// Our vertices. Three consecutive floats give a 3D vertex; Three consecutive
// vertices give a triangle. A cube has 6 faces with 2 triangles each, so this
// makes 6*2=12 triangles, and 12*3=36 vertices
static const std::vector<GLfloat> cube_vertices = {
    // RED
    -1.0f, -1.0f, -1.0f,  //
    -1.0f, -1.0f, 1.0f,   //
    -1.0f, 1.0f, 1.0f,    //

    -1.0f, -1.0f, -1.0f,  //
    -1.0f, 1.0f, 1.0f,    //
    -1.0f, 1.0f, -1.0f,   //

    // GREEN
    1.0f, 1.0f, -1.0f,    //
    -1.0f, -1.0f, -1.0f,  //
    -1.0f, 1.0f, -1.0f,   //

    1.0f, 1.0f, -1.0f,    //
    1.0f, -1.0f, -1.0f,   //
    -1.0f, -1.0f, -1.0f,  //

    // ORANGE
    1.0f, -1.0f, -1.0f,  //
    1.0f, 1.0f, 1.0f,    //
    1.0f, -1.0f, 1.0f,   //

    1.0f, 1.0f, 1.0f,    //
    1.0f, -1.0f, -1.0f,  //
    1.0f, 1.0f, -1.0f,   //

    // BLUE
    -1.0f, 1.0f, 1.0f,   //
    -1.0f, -1.0f, 1.0f,  //
    1.0f, -1.0f, 1.0f,   //

    1.0f, 1.0f, 1.0f,   //
    -1.0f, 1.0f, 1.0f,  //
    1.0f, -1.0f, 1.0f,  //

    // YELLOW
    1.0f, -1.0f, 1.0f,    //
    -1.0f, -1.0f, -1.0f,  //
    1.0f, -1.0f, -1.0f,   //

    1.0f, -1.0f, 1.0f,    //
    -1.0f, -1.0f, 1.0f,   //
    -1.0f, -1.0f, -1.0f,  //

    // WHITE
    1.0f, 1.0f, 1.0f,    //
    -1.0f, 1.0f, -1.0f,  //
    -1.0f, 1.0f, 1.0f,   //

    1.0f, 1.0f, 1.0f,    //
    1.0f, 1.0f, -1.0f,   //
    -1.0f, 1.0f, -1.0f,  //
};

static const std::vector<GLfloat> cube_color = {
    // Red
    1.0, 0.0, 0.0,  //
    1.0, 0.0, 0.0,  //
    1.0, 0.0, 0.0,  //

    1.0, 0.0, 0.0,  //
    1.0, 0.0, 0.0,  //
    1.0, 0.0, 0.0,  //

    // Green
    0.0, 1.0, 0.0,  //
    0.0, 1.0, 0.0,  //
    0.0, 1.0, 0.0,  //

    0.0, 1.0, 0.0,  //
    0.0, 1.0, 0.0,  //
    0.0, 1.0, 0.0,  //

    // Orange
    1.0, 0.5, 0.0,  //
    1.0, 0.5, 0.0,  //
    1.0, 0.5, 0.0,  //

    1.0, 0.5, 0.0,  //
    1.0, 0.5, 0.0,  //
    1.0, 0.5, 0.0,  //

    // Blue
    0.0, 0.0, 1.0,  //
    0.0, 0.0, 1.0,  //
    0.0, 0.0, 1.0,  //

    0.0, 0.0, 1.0,  //
    0.0, 0.0, 1.0,  //
    0.0, 0.0, 1.0,  //

    // Yellow
    1.0, 1.0, 0.0,  //
    1.0, 1.0, 0.0,  //
    1.0, 1.0, 0.0,  //

    1.0, 1.0, 0.0,  //
    1.0, 1.0, 0.0,  //
    1.0, 1.0, 0.0,  //

    // White
    1.0, 1.0, 1.0,  //
    1.0, 1.0, 1.0,  //
    1.0, 1.0, 1.0,  //

    1.0, 1.0, 1.0,  //
    1.0, 1.0, 1.0,  //
    1.0, 1.0, 1.0,  //
};
